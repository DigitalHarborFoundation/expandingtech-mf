webpackJsonp([0xba6023276400],{475:function(e,t){e.exports={data:{wordpressWpLessons:{id:"e03238fc-0850-5a81-909c-d4bac7bc3e0c",wordpress_id:203,title:"Using Scratch to Make Games",slug:"using-scratch-to-make-games",content:'<h2>Overview and Goals</h2>\n<p>The Game Development module will provide you with the basics of game development. After completing the activities in this path you will understand the underlying mechanics and components needed to create a game. In this lesson, you will be using a program called Scratch to create a simple game of your own and then remix someone else&#8217;s game to create a second game.</p>\n<h3>Goals:</h3>\n<ul>\n<li>Become comfortable with the interface and tools in Scratch</li>\n<li>Use Scratch to create a simple game by following a tutorial</li>\n<li>Demonstrate the ability to understand the code and program by remixing someone else&#8217;s game and making your own customizations</li>\n<li>Use Scratch to learn and practice the foundations of coding and development</li>\n<li>Understand terminology used in game development and game engines</li>\n</ul>\n<hr />\n<h2>Purpose of Scratch</h2>\n<p>Scratch is an excellent introduction to core principles of game development and coding. The purpose is to learn and practice skills that will help in all aspects of future programming and coding, whether it be for the web or for game and app development. Scratch should be viewed as a pathway to learn these skills and as a way to get a taste of how a game development platform works.</p>\n<p><em>Scratch is quite powerful</em>. The aim is to learn the skills that are crucial to future coding and development success in a fun, interactive way. The areas covered in the final project prompt are some core skills that will provide an excellent foundation!</p>\n<h2>Using Scratch to Make Games</h2>\n<p>Scratch is an easy to use beginner game development tool. Scratch can be used for many things like creating animations and programming games.</p>\n<h2><strong><span style="color: #0091c9;">Activity: Getting to Know Scratch</span></strong></h2>\n<ol>\n<li>Watch this video for an overview of Scratch:<iframe width="480" height="360" src="https://www.youtube.com/embed/qDFY4O2JU9U?rel=0" frameborder="0" allowfullscreen="allowfullscreen"></iframe></li>\n<li>Go to the Scratch website: <a href="http://scratch.mit.edu/" target="_blank" rel="noopener">http://scratch.mit.edu</a></li>\n<li>Create an account by clicking <span style="color: #0091c9;">Join Scratch</span>. Register with your <b>@youth.dhftc.org</b> email address.</li>\n<li>Start here to learn the basic tools: <a href="http://scratch.mit.edu/projects/editor/?tip_bar=getStarted" target="_blank" rel="noopener">Getting Started with Scratch</a>\n<ul>\n<li style="list-style-type: none">\n<ul>\n<li style="list-style-type: none">\n<ul>\n<li>Once you get to that page, the step by step tutorial will be showing on the right hand side of the page</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src="http://dhf-website.s3.amazonaws.com/images/scratch1.jpg" alt="scratch1" width="600" /></li>\n<li>Try adding comments!\n<ul>\n<li style="list-style-type: none;">\n<ul>\n<li>Comments are a useful way to keep track of your code! These can be used to remind yourself what you&#8217;re working on and give a viewer some idea of what each section of code does.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>To Add Comments:\n<ul>\n<li style="list-style-type: none;">\n<ul>\n<li>Add a brick to your Scratch project. Work through the tutorial and add some bricks.</li>\n<li>Once added, right click on the brick and choose &#8216;comment&#8217;.</li>\n<li>You can now enter reminders or descriptions of the code!</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2><span style="color: #0091c9;"> Activity: Learning the Scratch User Interface (UI)</span></h2>\n<ol>\n<li>An important part of being successful with Scratch, or any game development platform, is learning the UI. This will help when going through the rest of the lessons and tutorials on Learn, but also if you look to other Scratch resources. Knowing the parts of the platform from the very beginning will save time in the long-run.\n<ul>\n<li style="list-style-type: none;">\n<ul>\n<li>Much of the layout and features of Scratch are present in other game development platforms. Becoming familiar with these terms now will help later when moving to a different platform such as Unity.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Look at this screenshot:<br />\n<img src="http://dhf-website.s3.amazonaws.com/images/Scratch%20UI-600px1.jpg" alt="Scratch UI" /></p>\n<ul>\n<li><b>Preview</b> &#8211; This is a preview of your game/app. Click the <b>Green</b> flag to begin running your game/app. Your code scripts will begin running and you can use this to actively preview and troubleshoot. This also serves as a playthrough of your project!</li>\n<li><b>Editor</b> &#8211; This is where you edit your scripts, open the appearance editor for sprites and backdrops, or edit your sound files.\n<ul>\n<li><b>Note</b>: You can switch between the <i>Scripts</i>, <i>Costumes</i>, and <i>Sounds</i> tabs to access different assets.</li>\n</ul>\n</li>\n<li><b>Stage</b> &#8211; This is the backdrop of your game and can be changed using the <i>switch backdrop to… </i>block in Looks</li>\n<li><b>Sprites </b>&#8211; These are the characters/objects that act or interact with each other. Each sprite has its own code and can have several different <i>costumes </i>to change between. Costumes can be changed with the <i>switch costume to </i>block in <strong>Looks</strong>\n<ul>\n<li>Changing costumes is used to animate Sprites and can give the appearance of walking. This will be covered more in the lesson <i>Inkscape and Scratch</i>.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Scratch uses other terminology that you may want to become familiar with. Here are some examples:\n<ul>\n<li><strong>Asset</strong> &#8211; When Scratch loads your project, it will show a counter informing you the amount of <em>assets</em> that are being loaded. This is the amount of scripts, images (costumes and backdrops) and sounds that are in the project. Other game engines such as Unity use this term so it&#8217;s good to become familiar with it!</li>\n<li><b>Blocks </b>&#8211; <em>Blocks</em> are the puzzle shapes that represent your <strong>code</strong>. The blocks fit together, with different types of code having different shapes. <em>Not all blocks connect together</em>. You must fit together blocks that have matching notches. This is to prevent your code from having errors. Once a series of connected blocks are formed, this is called a <strong>script</strong>.\n<ul>\n<li style="list-style-type: none;">\n<ul>\n<li><strong>Hat Blocks </strong>&#8211;\n<ul>\n<li>Hat blocks are designed to start scripts. They have notches for blocks to fit under them.</li>\n</ul>\n</li>\n<li><strong>Stack Blocks </strong>&#8211;\n<ul>\n<li>Stack blocks are rectangular blocks that are notched on the top and bottom. These fit between other blocks.</li>\n</ul>\n</li>\n<li><strong>Boolean Blocks </strong>&#8211;\n<ul>\n<li>Boolean blocks contain conditions. These are often used for reporting <em> true </em> or <em>false</em>.</li>\n</ul>\n</li>\n<li><strong>C Blocks </strong>&#8211;\n<ul>\n<li>C blocks are shaped like a &#8216;C&#8217; and contain code. A Forever loop is an example of this type of block, as the script fits inside the &#8216;C.&#8217;</li>\n</ul>\n</li>\n<li><strong>Cap Blocks </strong>&#8211;\n<ul>\n<li>Cap blocks are used to stop scripts. Examples are the &#8216;stop&#8217; and &#8216;delete clone&#8217; blocks.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>[box type =&#8221;info&#8221;]These types of blocks represent <em>different aspects of code</em>. Making the connection between the block and what it means and how it fits with other blocks will help with all future coding and development.[/box]</li>\n</ul>\n</li>\n</ol>\n'}},pathContext:{}}}});
//# sourceMappingURL=path---using-scratch-to-make-games-1a003927a64a52db503b.js.map